; https://www.bloomberg.com/company/stories/configuring-uwsgi-production-deployment/
[uwsgi]
strict = true
master = true
enable-threads = true
threads = 2
vacuum = true                          ; Delete sockets during shutdown
single-interpreter = true
die-on-term = true                     ; Shutdown when receiving SIGTERM (default is respawn)
need-app = true

disable-logging = false
log-4xx = true
log-5xx = true

max-requests = 1000                  ; Restart workers after this many requests
max-worker-lifetime = 3600           ; Restart workers after this many seconds
reload-on-rss = 2048                 ; Restart workers after this much resident memory
worker-reload-mercy = 3              ; How long to wait before forcefully killing workers

harakiri = 60

auto-procname = true
procname-prefix-spaced = bulletin

processes = 1
offload-threads = 4

; shared-socket = 0.0.0.0:9999
; https =  =0,$(HTTPS_CRT),$(HTTPS_KEY),HIGH

http-socket = 0.0.0.0:9999
protocol = http

module = bulletin.server:app

cache2 = name=search-cache,items=100000
; load the mime types engine
mime-file = /etc/mime.types

; at each request starting with /img check it in the cache (use mime types engine for the content type)
route-uri = ^/api/search cache:key=${QUERY_STRING},name=search-cache,mime=1,expires=3600
route-uri = ^/api/search cachestore:key=${QUERY_STRING},name=search-cache
route-uri = ^/api/search last:

route-uri = ^/pdf last:

; pass urls handled by the backend to the app
; if the request maps to a file in static, serve it
; route-if = isfile:$(CLIENT_DIR)${PATH_INFO} static:$(CLIENT_DIR)${PATH_INFO}
route-if = isfile:/app/build${PATH_INFO} static:/app/build${PATH_INFO}
; otherwise, serve index.html which does client-side routing
; route-run = static:$(CLIENT_DIR)/index.html
route-run = static:/app/build/index.html

static-gzip-all = true
